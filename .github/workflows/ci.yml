name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # Test against currently supported LTS and current release
        # Node 16 enters maintenance and will be dropped soon; keep for now if needed.
        node-version: [16, 18, 20, 22]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb xclip
        
    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then
          xvfb-run -a npm test
        else
          npm test
        fi
      shell: bash
      env:
        CI: true

    - name: Run tests with coverage
      run: |
        if [ "$RUNNER_OS" = "Linux" ]; then
          xvfb-run -a npm run test:coverage
        else
          npm run test:coverage
        fi
      shell: bash
      env:
        CI: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20'
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage
        flags: unittests
        name: codecov-umbrella

  publish-test:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Test npm pack
      run: |
        npm pack
        tar -tf clipaste-*.tgz
        ls -la clipaste-*.tgz

    - name: Test global installation
      run: |
        npm install -g ./clipaste-*.tgz
        clipaste --version
        clipaste --help